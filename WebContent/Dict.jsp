<%@page import="java.util.Map"%><%@page import="java.util.List"%><%@page import="com.right.dao.MenuDAO"%><%@ page language="java" contentType="text/html; charset=UTF-8"	pageEncoding="UTF-8"%><%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %><%@ taglib uri="http://logging.apache.org/log4j/tld/log" prefix="log" %><html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><link href="bootstrap/css/bootstrap.min.css" rel="stylesheet"><script src="jquery/jquery-1.9.1.min.js"></script><script src="bootstrap/js/bootstrap.min.js"></script><title>权限管理</title><script type="text/javascript" >	//处理浏览器直接关闭的	//function checkLeave(){    //if (event.clientX>document.body.clientWidth && event.clientY<0||event.altKey){      //  window.open('check_logout.jsp','',        //        'height=1366,width=768,top=0,left=0');   		 //}	//}	//$(window).bind('beforeunload',function(){return '您输入的内容尚未保存，确定离开此页面吗？';});		//真正起作用的是下面的代码，而且不用body绑定属性	//$(window).bind('beforeunload',function(){		//window.open('check_logout.jsp','', 'height=0,width=0,top=0,left=0');  		//window.open('check_logout.jsp','', 'height=0,width=0,top=0,left=0');  		//return '您输入的内容尚未保存，确定离开此页面吗？';		//}	//);	 //function  checkLeave()        //{        	//if(event.clientX>document.body.clientWidth&&event.clientY<0||event.altKey)          // {   	    	// window.open('check_logout.jsp','',	    		//               'height=1366,width=768,top=0,left=0');  		           //}        //}		//处理浏览器关闭结束	//修改	function modify() {		var chk_id = document.getElementsByName("chk_id");		var mod = document.getElementById("mod");		var i = 0;		for (; i < chk_id.length; i++) {			if (chk_id[i].checked == true)				break;		}		//由于如果全部遍历完，就说明没有找到，所以就等于length长度		if (i == chk_id.length) {			alert("未选择！");			mod.setAttribute('data-target', '');		} else {			mod.setAttribute('data-target', '#modify_modal');			//mod.setAttribute('href', 'menu_modify.jsp?id='				//			+ chk_id[i].value);						mod.setAttribute('href', 'dict!modify.action?id='					+ chk_id[i].value);		}		$("#modify_modal").on("hidden.bs.modal", function() {			$(this).removeData("bs.modal");		});	}			function delete1(){		console.log("delete1");		//模态框失败。估计要这样访问才能嵌入。这个和insert不同，insert是直接href中action		//modify是mod.setAttribute.而删除刚才是直接跳转				//menu_delete 是通过menu.jsp传递一个str到menu_delete.jps。在menu_delete.jsp中连接数据库操作。		//所以是有值的，而且是模态框中的内容		//但是这个有缺陷的，如果取消复选框后，再次选择，仍然是那个选项的		//menu_delete 中的form根本没有提交的				//而现在是传递一个check_id到action，连接数据库，如果成功，就跳转到Dict.delete.jsp,而且好像提交了2次啊		//所以是另一个页面				//这是一种新的情况啊。因为不是之前menu_delete使用Ajax之后跳转到一个全新的一个页面		//必须使用del_id.setAttribute提交，不能使用Ajax		//将选择的复选框作为参数附加		//但是这样怎么得到选择的复选框呢？使用javascript				var del_id = document.getElementById("del");		del_id.setAttribute('data-target', '#delete_modal');		//console.log("else str"+str);		del_id.setAttribute('href', 'dict!redirectDictDelete.action');				//怎么不提交数据啊？// 		$("#modify_modal").on("hidden.bs.modal", function() {// 			$(this).removeData("bs.modal");// 		});//看来不是这个错误				// 		$("#deleteMenuForm").submit();//这个是post请求啊，我必须使用get请求		//使用Ajax将选中的checkBox提交到后台的action 还要submit否则不能提交啊// 		$.post("dict!selectDeleteItemsById.action",$("input[@name='chk_id']:checked").serialize(),function(result){  // 		    $(".content-box-content").html(result);  // 		});  				//怎么提交了2次		//form提交和模态框的嵌入产生冲突了，2次提交		//需求有点奇葩。Dict.jsp由于要嵌入模态框，希望用get方法提交		//到接受DictActon希望用post方法接受。属性ids				//最好看看模态框能不能用post方法。		//否则就只能用Dict.jsp拼接字符串，再DictAction自己解析字符串				//另一个想法就是不要在checkbox进行显示.弹出模态框询问是否删除,		//把chekbox的值传递模态框，再把模态框的值传递到DictAction,		//但是这个问题还是存在，就是不能勾选多个checkbox,否则值的传递困难		//如果单纯地把checkbox从Dict.jsp直接传递到Dict.action中这个问题是很容易的				//看了淘宝应该是2次请求，第一次发送checkbox的id进去，Dict.action得到check_id,		//返回你确认要删除吗？		//第2次如果点击确定，那么执行删除操作。				//也就是说Action中的check_id必须在二次请求中的值能够保存下来，才能进行操作		//而且第一次action不需要去查数据库，只是需要保存check_id，然后就跳转页面				///第2次请求如果是确定，那么就将利用第一次的action的check_id，		//执行数据库删除操作				//假如check_id不能够在2次请求中保存下来，那么就写一个类去保存check_id				//还是没有摆脱困境。checkbox要提交到action。弹出模态框要用href提交。		//modify页面是因为只是一个check_id，附加到href				//第一次不用提交check_id，弹出模态框，询问用户是否删除，第2次如果用户点击确定，那么提交check_id.		//可能用户点击确定,从Dict_delete.jsp让Dict.jsp提交Action这个操作有点困难		//困难在那里呢？就是2个jsp通信是不允许，而且困难。使用Action作为中间桥梁				//或者要3次，第一次Dict.jsp点击删除，跳转到DictAction,跳转到模态框Dict_delete.jsp		//2.用户点击确定，跳转到DictAction，DictAction，跳转到Dict.jsp，但是这个步骤或许会出现问题，可能选择的check_id没有了，		//3.Dict_delete.jsp提交check到Action，				//试一下能不能跨页面使用jsp中的checkbox	}	</script></head>		<!--是否通过关闭按钮或者用Alt+F4退出	如果为刷新触发onbeforeunload事件，下面if语句不执行 	<body 	onbeforeunload="checkLeave()" >	 --> <body>	<div class="container-fluid"		style="padding-left: 0px; padding-right: 0px">		<div class="row-fluid">			<jsp:include page="top.jsp"></jsp:include>		</div>		<div class="row-fluid">			<div class="col-md-2" style="margin-top: 20">				<jsp:include page="left.html"></jsp:include>			</div>			<div class="col-md-10" style="margin-top: 20">			<div style="float: right">							<input class="btn btn-default btn-primary" type="button"								href="dict!insert.action" data-toggle="modal"								data-target="#insert_modal" value="新增"> 							<input								class="btn btn-default btn-primary" type="button" id="mod"								href="" data-toggle="modal" data-target="#modify_modal"								onclick="modify()" value="修改">							<input								class="btn btn-default btn-primary" type="button" id="del"								onclick="delete1()" data-toggle="modal" value="删除">						</div>						<!-- 注意这里要使用action提交这个form的数据啊，Ajax那里只是提交一个check_id -->				<form role="form" id="deleteMenuForm"  method="post" action="dict!delete.action" >					<table class="table table-striped table-bordered">						<caption>字典列表</caption>						<thead>							<tr>								<th>选择</th>								<th>id</th>								<th>编号</th>								<th>名称</th>								<th>字典类型</th>															</tr>						</thead>						<tbody>														<c:forEach items="${dictList}" var="dict">															<tr>									<td><input type="checkbox" name="chk_id" value="${dict.id}"/></td>									<td>${dict.id }</td>									<td>${dict.code}</td>									<td>${dict.name} </td>									<td>									 ${dict.dictionaryType.name}									</td>								</tr>							</c:forEach>						</tbody>					</table>				</form>				</div>		</div>	</div>	<!-- 新增-模态对话框 -->	<div class="modal fade" id="insert_modal">		<div class="modal-dialog">			<div class="modal-content">				<!-- 嵌入menu_insert.jsp页面内容 -->			</div>			<!-- 对话框内容部分 -->		</div>		<!-- /对话框-->	</div>	<!-- 修改-模态对话框 -->	<div class="modal fade" id="modify_modal">		<div class="modal-dialog">			<div class="modal-content">				<!-- 嵌入menu_modify.jsp页面内容 -->			</div>			<!-- 对话框内容部分 -->		</div>		<!-- /对话框-->	</div>		<!-- 删除对话框 -->		<div class="modal fade" id="delete_modal">		<div class="modal-dialog">			<div class="modal-content">				<!-- 嵌入menu_modify.jsp页面内容 -->			</div>			<!-- 对话框内容部分 -->		</div>		<!-- /对话框-->	</div></body></html>